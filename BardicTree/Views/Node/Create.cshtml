@model BardicTree.Models.UIAddStoryElement

@{
    ViewBag.Title = "Create Story Element";
}

<h2>Create Story Element</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal col-md-12">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-md-9">
            <div class="form-group">
                @Html.LabelFor(model => model.ChoiceText, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <p class="form-control-static">@Html.DisplayFor(model => model.ChoiceText)</p>
                    @Html.HiddenFor(model => model.ChoiceText)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.TitleText, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TitleText, new { htmlAttributes = new { @class = "form-control", @placeholder = "Title for this story element..." } })
                    @Html.ValidationMessageFor(model => model.TitleText, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.StoryText, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.StoryText, new { @class = "form-control", @rows = 10, @placeholder = "The story continues..." })
                    @Html.ValidationMessageFor(model => model.StoryText, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.QuestionText, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.QuestionText, new { htmlAttributes = new { @class = "form-control", @placeholder = "Question that the story poses at the end..." } })
                    @Html.ValidationMessageFor(model => model.QuestionText, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.HiddenFor(model => model.ParentNode)
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-success" />
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <p><strong>Choice</strong> - The text for the choice should be simple and clearly following the question posed in the previous story element.</p>
            <p><strong>Title</strong> - Keep the title simple and relevent to the choice made.</p>
            <p><strong>Story</strong> - Write away! The element should progress the story forward.</p>
            <p><strong>Question</strong> - Pose a meaningful question for others to provide answers for</p>
        </div>
    </div>
}
